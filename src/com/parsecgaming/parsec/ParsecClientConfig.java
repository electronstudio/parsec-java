package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecClientConfig extends Structure {
	/** < `true` to force decoding of video frames via a software implementation. */
	public int decoderSoftware;
	/** < ::ParsecContainer value. */
	public int mediaContainer;
	/** < ::ParsecProtocol value. */
	public int protocol;
	/** < See details. */
	public int resolutionX;
	/** < See details. */
	public int resolutionY;
	/** < See details. */
	public int refreshRate;
	/**
	 * < ASCII null-terminated secret code that may be used to gain temporary access to a host.<br>
	 * C type : char[32]
	 */
	public byte[] secret = new byte[32];
	/** < `true` to return compressed PNG cursor images during ::ParsecClientPollEvents, `false` to return a 32-bit RGBA image. */
	public byte pngCursor;
	/** < `true` to set the decoder to compatibility mode. This should be tried if having playback issues, especially on NVIDIA devices. */
	public byte decoderCompatibility;
	/** < `true` to allow H.265 codec. This must be enabled on both the client and host. */
	public byte decoderH265;
	/** C type : uint8_t[1] */
	public byte[] __pad = new byte[1];
	public ParsecClientConfig() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("decoderSoftware", "mediaContainer", "protocol", "resolutionX", "resolutionY", "refreshRate", "secret", "pngCursor", "decoderCompatibility", "decoderH265", "__pad");
	}
	public ParsecClientConfig(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecClientConfig implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecClientConfig implements Structure.ByValue {
		
	};
}
