package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecHostConfig extends Structure {
	/** < Resolution width. ::HOST_DESKTOP owner only. */
	public int resolutionX = 0;
	/** < Resolution height. ::HOST_DESKTOP owner only. */
	public int resolutionY = 0;
	/** < Refresh rate in Hz. ::HOST_DESKTOP owner only. */
	public int refreshRate = 60 ;
	/** < Mute local audio on owner connection. ::HOST_DESKTOP owner only. */
	public int adminMute = 1;
	/** < Block remote input when local host input occurs. ::HOST_DESKTOP only. */
	public int exclusiveInput = 1;
	/** < Desired frames per second. */
	public int encoderFPS = 0;
	/** < Maximum output bitrate in Mbps, split between guests. */
	public int encoderMaxBitrate = 10;
	/** < Allow H.265 codec. */
	public int encoderH265 = 0;
	/** < Total number of guests allowed at once. This number should not include the local host. */
	public int maxGuests = 20;
	/**
	 * < UTF-8 null-terminated name string. May be zeroed to use hostname.<br>
	 * C type : char[256]
	 */
	public byte[] name = new byte[256];
	/**
	 * < UTF-8 null-terminated description string. ::HOST_GAME only.<br>
	 * C type : char[512]
	 */
	public byte[] desc = new byte[512];
	/**
	 * < Game unique identifier issued by Parsec. ::HOST_GAME only.<br>
	 * C type : char[72]
	 */
	public byte[] gameID = new byte[72];
	/** < Set to `true` to allow the hosting session to be visible publicly in the Parsec Arcade. ::HOST_GAME only. */
	public byte publicGame = 0;
	/** C type : uint8_t[3] */
	public byte[] __pad = new byte[3];
	public ParsecHostConfig() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("resolutionX", "resolutionY", "refreshRate", "adminMute", "exclusiveInput", "encoderFPS", "encoderMaxBitrate", "encoderH265", "maxGuests", "name", "desc", "gameID", "publicGame", "__pad");
	}
	public ParsecHostConfig(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecHostConfig implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecHostConfig implements Structure.ByValue {
		
	};
}
