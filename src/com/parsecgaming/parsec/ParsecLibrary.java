package com.parsecgaming.parsec;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.ShortByReference;
import java.nio.ByteBuffer;

/**
 * JNA Wrapper for library <b>parsec</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "parsec";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(ParsecLibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(ParsecLibrary.class, ParsecLibrary.JNA_NATIVE_LIB);
	}
	/** enum values */
	public static interface ParsecStatus {
		/**
		 * < 0<br>
		 * <i>native declaration : line 25</i>
		 */
		public static final int PARSEC_OK = 0;
		/**
		 * < 10<br>
		 * <i>native declaration : line 27</i>
		 */
		public static final int WRN_CONTINUE = 10;
		/**
		 * < 4<br>
		 * <i>native declaration : line 29</i>
		 */
		public static final int HOST_WRN_SHUTDOWN = 4;
		/**
		 * < 5<br>
		 * <i>native declaration : line 30</i>
		 */
		public static final int HOST_WRN_KICKED = 5;
		/**
		 * < 6<br>
		 * <i>native declaration : line 32</i>
		 */
		public static final int CONNECT_WRN_APPROVAL = 6;
		/**
		 * < 8<br>
		 * <i>native declaration : line 33</i>
		 */
		public static final int CONNECT_WRN_DECLINED = 8;
		/**
		 * < 9<br>
		 * <i>native declaration : line 34</i>
		 */
		public static final int CONNECT_WRN_CANCELED = 9;
		/**
		 * < 99<br>
		 * <i>native declaration : line 35</i>
		 */
		public static final int CONNECT_WRN_PEER_GONE = 99;
		/**
		 * < 1000<br>
		 * <i>native declaration : line 37</i>
		 */
		public static final int DECODE_WRN_CONTINUE = 1000;
		/**
		 * < 1001<br>
		 * <i>native declaration : line 38</i>
		 */
		public static final int DECODE_WRN_ACCEPTED = 1001;
		/**
		 * < 1003<br>
		 * <i>native declaration : line 39</i>
		 */
		public static final int DECODE_WRN_REINIT = 1003;
		/**
		 * < 2000<br>
		 * <i>native declaration : line 41</i>
		 */
		public static final int NETWORK_WRN_TIMEOUT = 2000;
		/**
		 * < 5000<br>
		 * <i>native declaration : line 43</i>
		 */
		public static final int QUEUE_WRN_EMPTY = 5000;
		/**
		 * < 5001<br>
		 * <i>native declaration : line 44</i>
		 */
		public static final int QUEUE_WRN_NO_BUFFER = 5001;
		/**
		 * < 5003<br>
		 * <i>native declaration : line 45</i>
		 */
		public static final int QUEUE_WRN_TIMEOUT = 5003;
		/**
		 * < 6000<br>
		 * <i>native declaration : line 47</i>
		 */
		public static final int AUDIO_WRN_NO_DATA = 6000;
		/**
		 * < -1<br>
		 * <i>native declaration : line 49</i>
		 */
		public static final int ERR_DEFAULT = -1;
		/**
		 * < -3<br>
		 * <i>native declaration : line 51</i>
		 */
		public static final int PARSEC_NOT_RUNNING = -3;
		/**
		 * < -4<br>
		 * <i>native declaration : line 52</i>
		 */
		public static final int PARSEC_ALREADY_RUNNING = -4;
		/**
		 * < -5<br>
		 * <i>native declaration : line 53</i>
		 */
		public static final int PARSEC_NOT_IMPLEMENTED = -5;
		/**
		 * < -10<br>
		 * <i>native declaration : line 55</i>
		 */
		public static final int DECODE_ERR_INIT = -10;
		/**
		 * < -11<br>
		 * <i>native declaration : line 56</i>
		 */
		public static final int DECODE_ERR_LOAD = -11;
		/**
		 * < -13<br>
		 * <i>native declaration : line 57</i>
		 */
		public static final int DECODE_ERR_MAP = -13;
		/**
		 * < -14<br>
		 * <i>native declaration : line 58</i>
		 */
		public static final int DECODE_ERR_DECODE = -14;
		/**
		 * < -15<br>
		 * <i>native declaration : line 59</i>
		 */
		public static final int DECODE_ERR_CLEANUP = -15;
		/**
		 * < -16<br>
		 * <i>native declaration : line 60</i>
		 */
		public static final int DECODE_ERR_PARSE = -16;
		/**
		 * < -17<br>
		 * <i>native declaration : line 61</i>
		 */
		public static final int DECODE_ERR_NO_SUPPORT = -17;
		/**
		 * < -18<br>
		 * <i>native declaration : line 62</i>
		 */
		public static final int DECODE_ERR_PIXEL_FORMAT = -18;
		/**
		 * < -19<br>
		 * <i>native declaration : line 63</i>
		 */
		public static final int DECODE_ERR_BUFFER = -19;
		/**
		 * < -20<br>
		 * <i>native declaration : line 64</i>
		 */
		public static final int DECODE_ERR_RESOLUTION = -20;
		/**
		 * < -6101<br>
		 * <i>native declaration : line 66</i>
		 */
		public static final int WS_ERR_CONNECT = -6101;
		/**
		 * < -3001<br>
		 * <i>native declaration : line 67</i>
		 */
		public static final int WS_ERR_POLL = -3001;
		/**
		 * < -3002<br>
		 * <i>native declaration : line 68</i>
		 */
		public static final int WS_ERR_READ = -3002;
		/**
		 * < -3003<br>
		 * <i>native declaration : line 69</i>
		 */
		public static final int WS_ERR_WRITE = -3003;
		/**
		 * < -6105<br>
		 * <i>native declaration : line 70</i>
		 */
		public static final int WS_ERR_CLOSE = -6105;
		/**
		 * < -3005<br>
		 * <i>native declaration : line 71</i>
		 */
		public static final int WS_ERR_PING = -3005;
		/**
		 * < -3006<br>
		 * <i>native declaration : line 72</i>
		 */
		public static final int WS_ERR_PONG_TIMEOUT = -3006;
		/**
		 * < -3007<br>
		 * <i>native declaration : line 73</i>
		 */
		public static final int WS_ERR_PONG = -3007;
		/**
		 * < -3008<br>
		 * <i>native declaration : line 74</i>
		 */
		public static final int WS_ERR_AUTH = -3008;
		/**
		 * < -3009<br>
		 * <i>native declaration : line 75</i>
		 */
		public static final int WS_ERR_GOING_AWAY = -3009;
		/**
		 * < -5000<br>
		 * <i>native declaration : line 77</i>
		 */
		public static final int ZLIB_ERR_DEFLATE = -5000;
		/**
		 * < -5001<br>
		 * <i>native declaration : line 78</i>
		 */
		public static final int ZLIB_ERR_INFLATE = -5001;
		/**
		 * < -6023<br>
		 * <i>native declaration : line 80</i>
		 */
		public static final int NAT_ERR_PEER_PHASE = -6023;
		/**
		 * < -6024<br>
		 * <i>native declaration : line 81</i>
		 */
		public static final int NAT_ERR_STUN_PHASE = -6024;
		/**
		 * < -6033<br>
		 * <i>native declaration : line 82</i>
		 */
		public static final int NAT_ERR_NO_CANDIDATES = -6033;
		/**
		 * < -6111<br>
		 * <i>native declaration : line 83</i>
		 */
		public static final int NAT_ERR_JSON_ACTION = -6111;
		/**
		 * < -6112<br>
		 * <i>native declaration : line 84</i>
		 */
		public static final int NAT_ERR_NO_SOCKET = -6112;
		/**
		 * < -7000<br>
		 * <i>native declaration : line 86</i>
		 */
		public static final int OPENGL_ERR_CONTEXT = -7000;
		/**
		 * < -7001<br>
		 * <i>native declaration : line 87</i>
		 */
		public static final int OPENGL_ERR_SHARE = -7001;
		/**
		 * < -7002<br>
		 * <i>native declaration : line 88</i>
		 */
		public static final int OPENGL_ERR_PIXFORMAT = -7002;
		/**
		 * < -7003<br>
		 * <i>native declaration : line 89</i>
		 */
		public static final int OPENGL_ERR_CURRENT = -7003;
		/**
		 * < -7004<br>
		 * <i>native declaration : line 90</i>
		 */
		public static final int OPENGL_ERR_DC = -7004;
		/**
		 * < -7005<br>
		 * <i>native declaration : line 91</i>
		 */
		public static final int OPENGL_ERR_SHADER = -7005;
		/**
		 * < -7006<br>
		 * <i>native declaration : line 92</i>
		 */
		public static final int OPENGL_ERR_PROGRAM = -7006;
		/**
		 * < -7007<br>
		 * <i>native declaration : line 93</i>
		 */
		public static final int OPENGL_ERR_VERSION = -7007;
		/**
		 * < -7008<br>
		 * <i>native declaration : line 94</i>
		 */
		public static final int OPENGL_ERR_TEXTURE = -7008;
		/**
		 * < -8000<br>
		 * <i>native declaration : line 96</i>
		 */
		public static final int JSON_ERR_PARSE = -8000;
		/**
		 * < -8001<br>
		 * <i>native declaration : line 97</i>
		 */
		public static final int JSON_ERR_MISSING = -8001;
		/**
		 * < -8002<br>
		 * <i>native declaration : line 98</i>
		 */
		public static final int JSON_ERR_TYPE = -8002;
		/**
		 * < -8003<br>
		 * <i>native declaration : line 99</i>
		 */
		public static final int JSON_ERR_VAL_TYPE = -8003;
		/**
		 * < -8004<br>
		 * <i>native declaration : line 100</i>
		 */
		public static final int JSON_ERR_BUFFER = -8004;
		/**
		 * < -8005<br>
		 * <i>native declaration : line 101</i>
		 */
		public static final int JSON_ERR_FOPEN = -8005;
		/**
		 * < -8006<br>
		 * <i>native declaration : line 102</i>
		 */
		public static final int JSON_ERR_FREAD = -8006;
		/**
		 * < -8007<br>
		 * <i>native declaration : line 103</i>
		 */
		public static final int JSON_ERR_FWRITE = -8007;
		/**
		 * < -9000<br>
		 * <i>native declaration : line 105</i>
		 */
		public static final int AUDIO_ERR_INIT = -9000;
		/**
		 * < -9001<br>
		 * <i>native declaration : line 106</i>
		 */
		public static final int AUDIO_ERR_CAPTURE = -9001;
		/**
		 * < -9002<br>
		 * <i>native declaration : line 107</i>
		 */
		public static final int AUDIO_ERR_NETWORK = -9002;
		/**
		 * < -9003<br>
		 * <i>native declaration : line 108</i>
		 */
		public static final int AUDIO_ERR_FREE = -9003;
		/**
		 * < -9004<br>
		 * <i>native declaration : line 109</i>
		 */
		public static final int AUDIO_ERR_PLAY = -9004;
		/**
		 * < -10000<br>
		 * <i>native declaration : line 111</i>
		 */
		public static final int AUDIO_OPUS_ERR_INIT = -10000;
		/**
		 * < -10001<br>
		 * <i>native declaration : line 112</i>
		 */
		public static final int AUDIO_OPUS_ERR_DECODE = -10001;
		/**
		 * < -10002<br>
		 * <i>native declaration : line 113</i>
		 */
		public static final int AUDIO_OPUS_ERR_ENCODE = -10002;
		/**
		 * < -12007<br>
		 * <i>native declaration : line 115</i>
		 */
		public static final int NETWORK_ERR_BG_TIMEOUT = -12007;
		/**
		 * < -12008<br>
		 * <i>native declaration : line 116</i>
		 */
		public static final int NETWORK_ERR_BAD_PACKET = -12008;
		/**
		 * < -12011<br>
		 * <i>native declaration : line 117</i>
		 */
		public static final int NETWORK_ERR_BUFFER = -12011;
		/**
		 * < -12017<br>
		 * <i>native declaration : line 118</i>
		 */
		public static final int NETWORK_ERR_SHUTDOWN = -12017;
		/**
		 * < -12018<br>
		 * <i>native declaration : line 119</i>
		 */
		public static final int NETWORK_ERR_UNSUPPORTED = -12018;
		/**
		 * < -12019<br>
		 * <i>native declaration : line 120</i>
		 */
		public static final int NETWORK_ERR_INTERRUPTED = -12019;
		/**
		 * < -13000<br>
		 * <i>native declaration : line 122</i>
		 */
		public static final int SERVER_ERR_DISPLAY = -13000;
		/**
		 * < -13008<br>
		 * <i>native declaration : line 123</i>
		 */
		public static final int SERVER_ERR_RESOLUTION = -13008;
		/**
		 * < -13009<br>
		 * <i>native declaration : line 124</i>
		 */
		public static final int SERVER_ERR_MAX_RESOLUTION = -13009;
		/**
		 * < -13011<br>
		 * <i>native declaration : line 125</i>
		 */
		public static final int SERVER_ERR_NO_USER = -13011;
		/**
		 * < -13012<br>
		 * <i>native declaration : line 126</i>
		 */
		public static final int SERVER_ERR_NO_ROOM = -13012;
		/**
		 * < -13013<br>
		 * <i>native declaration : line 127</i>
		 */
		public static final int SERVER_ERR_VIDEO_DONE = -13013;
		/**
		 * < -13014<br>
		 * <i>native declaration : line 128</i>
		 */
		public static final int SERVER_ERR_CLIENT_ABORT = -13014;
		/**
		 * < -13015<br>
		 * <i>native declaration : line 129</i>
		 */
		public static final int SERVER_ERR_CLIENT_GONE = -13015;
		/**
		 * < -14003<br>
		 * <i>native declaration : line 131</i>
		 */
		public static final int CAPTURE_ERR_INIT = -14003;
		/**
		 * < -14004<br>
		 * <i>native declaration : line 132</i>
		 */
		public static final int CAPTURE_ERR_TEXTURE = -14004;
		/**
		 * < -15000<br>
		 * <i>native declaration : line 134</i>
		 */
		public static final int ENCODE_ERR_INIT = -15000;
		/**
		 * < -15002<br>
		 * <i>native declaration : line 135</i>
		 */
		public static final int ENCODE_ERR_ENCODE = -15002;
		/**
		 * < -15006<br>
		 * <i>native declaration : line 136</i>
		 */
		public static final int ENCODE_ERR_BUFFER = -15006;
		/**
		 * < -15100<br>
		 * <i>native declaration : line 137</i>
		 */
		public static final int ENCODE_ERR_PROPERTIES = -15100;
		/**
		 * < -15101<br>
		 * <i>native declaration : line 138</i>
		 */
		public static final int ENCODE_ERR_LIBRARY = -15101;
		/**
		 * < -15007<br>
		 * <i>native declaration : line 139</i>
		 */
		public static final int ENCODE_ERR_SESSION = -15007;
		/**
		 * < -15103<br>
		 * <i>native declaration : line 140</i>
		 */
		public static final int ENCODE_ERR_SESSION1 = -15103;
		/**
		 * < -15104<br>
		 * <i>native declaration : line 141</i>
		 */
		public static final int ENCODE_ERR_SESSION2 = -15104;
		/**
		 * < -15105<br>
		 * <i>native declaration : line 142</i>
		 */
		public static final int ENCODE_ERR_OUTPUT_INIT = -15105;
		/**
		 * < -15106<br>
		 * <i>native declaration : line 143</i>
		 */
		public static final int ENCODE_ERR_TEXTURE = -15106;
		/**
		 * < -15107<br>
		 * <i>native declaration : line 144</i>
		 */
		public static final int ENCODE_ERR_OUTPUT = -15107;
		/**
		 * < -15108<br>
		 * <i>native declaration : line 145</i>
		 */
		public static final int ENCODE_ERR_UNSUPPORTED = -15108;
		/**
		 * < -15109<br>
		 * <i>native declaration : line 146</i>
		 */
		public static final int ENCODE_ERR_HANDLE = -15109;
		/**
		 * < -15110<br>
		 * <i>native declaration : line 147</i>
		 */
		public static final int ENCODE_ERR_CAPS = -15110;
		/**
		 * < -19000<br>
		 * <i>native declaration : line 149</i>
		 */
		public static final int UPNP_ERR = -19000;
		/**
		 * < -22000<br>
		 * <i>native declaration : line 151</i>
		 */
		public static final int D3D_ERR_TEXTURE = -22000;
		/**
		 * < -22001<br>
		 * <i>native declaration : line 152</i>
		 */
		public static final int D3D_ERR_SHADER = -22001;
		/**
		 * < -22002<br>
		 * <i>native declaration : line 153</i>
		 */
		public static final int D3D_ERR_BUFFER = -22002;
		/**
		 * < -22003<br>
		 * <i>native declaration : line 154</i>
		 */
		public static final int D3D_ERR_LAYOUT = -22003;
		/**
		 * < -22004<br>
		 * <i>native declaration : line 155</i>
		 */
		public static final int D3D_ERR_DEVICE = -22004;
		/**
		 * < -22005<br>
		 * <i>native declaration : line 156</i>
		 */
		public static final int D3D_ERR_MT = -22005;
		/**
		 * < -22006<br>
		 * <i>native declaration : line 157</i>
		 */
		public static final int D3D_ERR_ADAPTER = -22006;
		/**
		 * < -22007<br>
		 * <i>native declaration : line 158</i>
		 */
		public static final int D3D_ERR_FACTORY = -22007;
		/**
		 * < -22008<br>
		 * <i>native declaration : line 159</i>
		 */
		public static final int D3D_ERR_OUTPUT = -22008;
		/**
		 * < -22009<br>
		 * <i>native declaration : line 160</i>
		 */
		public static final int D3D_ERR_CONTEXT = -22009;
		/**
		 * < -22010<br>
		 * <i>native declaration : line 161</i>
		 */
		public static final int D3D_ERR_OUTPUT1 = -22010;
		/**
		 * < -22011<br>
		 * <i>native declaration : line 162</i>
		 */
		public static final int D3D_ERR_SWAP_CHAIN = -22011;
		/**
		 * < -22012<br>
		 * <i>native declaration : line 163</i>
		 */
		public static final int D3D_ERR_DRAW = -22012;
		/**
		 * < -22013<br>
		 * <i>native declaration : line 164</i>
		 */
		public static final int D3D_ERR_OUTPUT5 = -22013;
		/**
		 * < -23000<br>
		 * <i>native declaration : line 166</i>
		 */
		public static final int H26X_ERR_NOT_FOUND = -23000;
		/**
		 * < -28000<br>
		 * <i>native declaration : line 168</i>
		 */
		public static final int AES_GCM_ERR_KEY_LEN = -28000;
		/**
		 * < -28001<br>
		 * <i>native declaration : line 169</i>
		 */
		public static final int AES_GCM_ERR_ENCRYPT = -28001;
		/**
		 * < -28002<br>
		 * <i>native declaration : line 170</i>
		 */
		public static final int AES_GCM_ERR_DECRYPT = -28002;
		/**
		 * < -28003<br>
		 * <i>native declaration : line 171</i>
		 */
		public static final int AES_GCM_ERR_CTX = -28003;
		/**
		 * < -28004<br>
		 * <i>native declaration : line 172</i>
		 */
		public static final int AES_GCM_ERR_BUFFER = -28004;
		/**
		 * < -28005<br>
		 * <i>native declaration : line 173</i>
		 */
		public static final int AES_GCM_ERR_OVERFLOW = -28005;
		/**
		 * < -32000<br>
		 * <i>native declaration : line 175</i>
		 */
		public static final int SCTP_ERR_GLOBAL_INIT = -32000;
		/**
		 * < -32001<br>
		 * <i>native declaration : line 176</i>
		 */
		public static final int SCTP_ERR_WRITE = -32001;
		/**
		 * < -32002<br>
		 * <i>native declaration : line 177</i>
		 */
		public static final int SCTP_ERR_SOCKET = -32002;
		/**
		 * < -32003<br>
		 * <i>native declaration : line 178</i>
		 */
		public static final int SCTP_ERR_BIND = -32003;
		/**
		 * < -32004<br>
		 * <i>native declaration : line 179</i>
		 */
		public static final int SCTP_ERR_CONNECT = -32004;
		/**
		 * < -33000<br>
		 * <i>native declaration : line 181</i>
		 */
		public static final int DTLS_ERR_BIO_WRITE = -33000;
		/**
		 * < -33001<br>
		 * <i>native declaration : line 182</i>
		 */
		public static final int DTLS_ERR_BIO_READ = -33001;
		/**
		 * < -33002<br>
		 * <i>native declaration : line 183</i>
		 */
		public static final int DTLS_ERR_SSL = -33002;
		/**
		 * < -33003<br>
		 * <i>native declaration : line 184</i>
		 */
		public static final int DTLS_ERR_BUFFER = -33003;
		/**
		 * < -33004<br>
		 * <i>native declaration : line 185</i>
		 */
		public static final int DTLS_ERR_NO_DATA = -33004;
		/**
		 * < -33005<br>
		 * <i>native declaration : line 186</i>
		 */
		public static final int DTLS_ERR_CERT = -33005;
		/**
		 * < -34000<br>
		 * <i>native declaration : line 188</i>
		 */
		public static final int STUN_ERR_PACKET = -34000;
		/**
		 * < -34001<br>
		 * <i>native declaration : line 189</i>
		 */
		public static final int STUN_ERR_PARSE_HEADER = -34001;
		/**
		 * < -34002<br>
		 * <i>native declaration : line 190</i>
		 */
		public static final int STUN_ERR_PARSE_ADDRESS = -34002;
		/**
		 * < -35000<br>
		 * <i>native declaration : line 192</i>
		 */
		public static final int SO_ERR_OPEN = -35000;
		/**
		 * < -35001<br>
		 * <i>native declaration : line 193</i>
		 */
		public static final int SO_ERR_SYMBOL = -35001;
		/**
		 * < -36000<br>
		 * <i>native declaration : line 195</i>
		 */
		public static final int PARSEC_ERR_VERSION = -36000;
		/**
		 * < -37000<br>
		 * <i>native declaration : line 197</i>
		 */
		public static final int RESAMPLE_ERR_INIT = -37000;
		/**
		 * < -37001<br>
		 * <i>native declaration : line 198</i>
		 */
		public static final int RESAMPLE_ERR_RESAMPLE = -37001;
		/**
		 * < `SSL_get_error` value will be subtracted from this value<br>
		 * <i>native declaration : line 200</i>
		 */
		public static final int OPENSSL_ERR = -600000;
		/**
		 * < `WSAGetLastError` value will be subtracted from this value<br>
		 * <i>native declaration : line 203</i>
		 */
		public static final int SOCKET_ERR = -700000;
	};
	/** enum values */
	public static interface ParsecLogLevel {
		/**
		 * < Messages interesting to support staff trying to figure out the context of an issue.<br>
		 * <i>native declaration : line 212</i>
		 */
		public static final int LOG_INFO = 0x0069;
		/**
		 * < Messages interesting to developers trying to debug an issue.<br>
		 * <i>native declaration : line 213</i>
		 */
		public static final int LOG_DEBUG = 0x0064;
	};
	/** enum values */
	public static interface ParsecKeycode {
		/**
		 * < 4<br>
		 * <i>native declaration : line 219</i>
		 */
		public static final int KEY_A = 4;
		/**
		 * < 5<br>
		 * <i>native declaration : line 220</i>
		 */
		public static final int KEY_B = 5;
		/**
		 * < 6<br>
		 * <i>native declaration : line 221</i>
		 */
		public static final int KEY_C = 6;
		/**
		 * < 7<br>
		 * <i>native declaration : line 222</i>
		 */
		public static final int KEY_D = 7;
		/**
		 * < 8<br>
		 * <i>native declaration : line 223</i>
		 */
		public static final int KEY_E = 8;
		/**
		 * < 9<br>
		 * <i>native declaration : line 224</i>
		 */
		public static final int KEY_F = 9;
		/**
		 * < 10<br>
		 * <i>native declaration : line 225</i>
		 */
		public static final int KEY_G = 10;
		/**
		 * < 11<br>
		 * <i>native declaration : line 226</i>
		 */
		public static final int KEY_H = 11;
		/**
		 * < 12<br>
		 * <i>native declaration : line 227</i>
		 */
		public static final int KEY_I = 12;
		/**
		 * < 13<br>
		 * <i>native declaration : line 228</i>
		 */
		public static final int KEY_J = 13;
		/**
		 * < 14<br>
		 * <i>native declaration : line 229</i>
		 */
		public static final int KEY_K = 14;
		/**
		 * < 15<br>
		 * <i>native declaration : line 230</i>
		 */
		public static final int KEY_L = 15;
		/**
		 * < 16<br>
		 * <i>native declaration : line 231</i>
		 */
		public static final int KEY_M = 16;
		/**
		 * < 17<br>
		 * <i>native declaration : line 232</i>
		 */
		public static final int KEY_N = 17;
		/**
		 * < 18<br>
		 * <i>native declaration : line 233</i>
		 */
		public static final int KEY_O = 18;
		/**
		 * < 19<br>
		 * <i>native declaration : line 234</i>
		 */
		public static final int KEY_P = 19;
		/**
		 * < 20<br>
		 * <i>native declaration : line 235</i>
		 */
		public static final int KEY_Q = 20;
		/**
		 * < 21<br>
		 * <i>native declaration : line 236</i>
		 */
		public static final int KEY_R = 21;
		/**
		 * < 22<br>
		 * <i>native declaration : line 237</i>
		 */
		public static final int KEY_S = 22;
		/**
		 * < 23<br>
		 * <i>native declaration : line 238</i>
		 */
		public static final int KEY_T = 23;
		/**
		 * < 24<br>
		 * <i>native declaration : line 239</i>
		 */
		public static final int KEY_U = 24;
		/**
		 * < 25<br>
		 * <i>native declaration : line 240</i>
		 */
		public static final int KEY_V = 25;
		/**
		 * < 26<br>
		 * <i>native declaration : line 241</i>
		 */
		public static final int KEY_W = 26;
		/**
		 * < 27<br>
		 * <i>native declaration : line 242</i>
		 */
		public static final int KEY_X = 27;
		/**
		 * < 28<br>
		 * <i>native declaration : line 243</i>
		 */
		public static final int KEY_Y = 28;
		/**
		 * < 29<br>
		 * <i>native declaration : line 244</i>
		 */
		public static final int KEY_Z = 29;
		/**
		 * < 30<br>
		 * <i>native declaration : line 245</i>
		 */
		public static final int KEY_1 = 30;
		/**
		 * < 31<br>
		 * <i>native declaration : line 246</i>
		 */
		public static final int KEY_2 = 31;
		/**
		 * < 32<br>
		 * <i>native declaration : line 247</i>
		 */
		public static final int KEY_3 = 32;
		/**
		 * < 33<br>
		 * <i>native declaration : line 248</i>
		 */
		public static final int KEY_4 = 33;
		/**
		 * < 34<br>
		 * <i>native declaration : line 249</i>
		 */
		public static final int KEY_5 = 34;
		/**
		 * < 35<br>
		 * <i>native declaration : line 250</i>
		 */
		public static final int KEY_6 = 35;
		/**
		 * < 36<br>
		 * <i>native declaration : line 251</i>
		 */
		public static final int KEY_7 = 36;
		/**
		 * < 37<br>
		 * <i>native declaration : line 252</i>
		 */
		public static final int KEY_8 = 37;
		/**
		 * < 38<br>
		 * <i>native declaration : line 253</i>
		 */
		public static final int KEY_9 = 38;
		/**
		 * < 39<br>
		 * <i>native declaration : line 254</i>
		 */
		public static final int KEY_0 = 39;
		/**
		 * < 40<br>
		 * <i>native declaration : line 255</i>
		 */
		public static final int KEY_ENTER = 40;
		/**
		 * < 41<br>
		 * <i>native declaration : line 256</i>
		 */
		public static final int KEY_ESCAPE = 41;
		/**
		 * < 42<br>
		 * <i>native declaration : line 257</i>
		 */
		public static final int KEY_BACKSPACE = 42;
		/**
		 * < 43<br>
		 * <i>native declaration : line 258</i>
		 */
		public static final int KEY_TAB = 43;
		/**
		 * < 44<br>
		 * <i>native declaration : line 259</i>
		 */
		public static final int KEY_SPACE = 44;
		/**
		 * < 45<br>
		 * <i>native declaration : line 260</i>
		 */
		public static final int KEY_MINUS = 45;
		/**
		 * < 46<br>
		 * <i>native declaration : line 261</i>
		 */
		public static final int KEY_EQUALS = 46;
		/**
		 * < 47<br>
		 * <i>native declaration : line 262</i>
		 */
		public static final int KEY_LBRACKET = 47;
		/**
		 * < 48<br>
		 * <i>native declaration : line 263</i>
		 */
		public static final int KEY_RBRACKET = 48;
		/**
		 * < 49<br>
		 * <i>native declaration : line 264</i>
		 */
		public static final int KEY_BACKSLASH = 49;
		/**
		 * < 51<br>
		 * <i>native declaration : line 265</i>
		 */
		public static final int KEY_SEMICOLON = 51;
		/**
		 * < 52<br>
		 * <i>native declaration : line 266</i>
		 */
		public static final int KEY_APOSTROPHE = 52;
		/**
		 * < 53<br>
		 * <i>native declaration : line 267</i>
		 */
		public static final int KEY_BACKTICK = 53;
		/**
		 * < 54<br>
		 * <i>native declaration : line 268</i>
		 */
		public static final int KEY_COMMA = 54;
		/**
		 * < 55<br>
		 * <i>native declaration : line 269</i>
		 */
		public static final int KEY_PERIOD = 55;
		/**
		 * < 56<br>
		 * <i>native declaration : line 270</i>
		 */
		public static final int KEY_SLASH = 56;
		/**
		 * < 57<br>
		 * <i>native declaration : line 271</i>
		 */
		public static final int KEY_CAPSLOCK = 57;
		/**
		 * < 58<br>
		 * <i>native declaration : line 272</i>
		 */
		public static final int KEY_F1 = 58;
		/**
		 * < 59<br>
		 * <i>native declaration : line 273</i>
		 */
		public static final int KEY_F2 = 59;
		/**
		 * < 60<br>
		 * <i>native declaration : line 274</i>
		 */
		public static final int KEY_F3 = 60;
		/**
		 * < 61<br>
		 * <i>native declaration : line 275</i>
		 */
		public static final int KEY_F4 = 61;
		/**
		 * < 62<br>
		 * <i>native declaration : line 276</i>
		 */
		public static final int KEY_F5 = 62;
		/**
		 * < 63<br>
		 * <i>native declaration : line 277</i>
		 */
		public static final int KEY_F6 = 63;
		/**
		 * < 64<br>
		 * <i>native declaration : line 278</i>
		 */
		public static final int KEY_F7 = 64;
		/**
		 * < 65<br>
		 * <i>native declaration : line 279</i>
		 */
		public static final int KEY_F8 = 65;
		/**
		 * < 66<br>
		 * <i>native declaration : line 280</i>
		 */
		public static final int KEY_F9 = 66;
		/**
		 * < 67<br>
		 * <i>native declaration : line 281</i>
		 */
		public static final int KEY_F10 = 67;
		/**
		 * < 68<br>
		 * <i>native declaration : line 282</i>
		 */
		public static final int KEY_F11 = 68;
		/**
		 * < 69<br>
		 * <i>native declaration : line 283</i>
		 */
		public static final int KEY_F12 = 69;
		/**
		 * < 70<br>
		 * <i>native declaration : line 284</i>
		 */
		public static final int KEY_PRINTSCREEN = 70;
		/**
		 * < 71<br>
		 * <i>native declaration : line 285</i>
		 */
		public static final int KEY_SCROLLLOCK = 71;
		/**
		 * < 72<br>
		 * <i>native declaration : line 286</i>
		 */
		public static final int KEY_PAUSE = 72;
		/**
		 * < 73<br>
		 * <i>native declaration : line 287</i>
		 */
		public static final int KEY_INSERT = 73;
		/**
		 * < 74<br>
		 * <i>native declaration : line 288</i>
		 */
		public static final int KEY_HOME = 74;
		/**
		 * < 75<br>
		 * <i>native declaration : line 289</i>
		 */
		public static final int KEY_PAGEUP = 75;
		/**
		 * < 76<br>
		 * <i>native declaration : line 290</i>
		 */
		public static final int KEY_DELETE = 76;
		/**
		 * < 77<br>
		 * <i>native declaration : line 291</i>
		 */
		public static final int KEY_END = 77;
		/**
		 * < 78<br>
		 * <i>native declaration : line 292</i>
		 */
		public static final int KEY_PAGEDOWN = 78;
		/**
		 * < 79<br>
		 * <i>native declaration : line 293</i>
		 */
		public static final int KEY_RIGHT = 79;
		/**
		 * < 80<br>
		 * <i>native declaration : line 294</i>
		 */
		public static final int KEY_LEFT = 80;
		/**
		 * < 81<br>
		 * <i>native declaration : line 295</i>
		 */
		public static final int KEY_DOWN = 81;
		/**
		 * < 82<br>
		 * <i>native declaration : line 296</i>
		 */
		public static final int KEY_UP = 82;
		/**
		 * < 83<br>
		 * <i>native declaration : line 297</i>
		 */
		public static final int KEY_NUMLOCK = 83;
		/**
		 * < 84<br>
		 * <i>native declaration : line 298</i>
		 */
		public static final int KEY_KP_DIVIDE = 84;
		/**
		 * < 85<br>
		 * <i>native declaration : line 299</i>
		 */
		public static final int KEY_KP_MULTIPLY = 85;
		/**
		 * < 86<br>
		 * <i>native declaration : line 300</i>
		 */
		public static final int KEY_KP_MINUS = 86;
		/**
		 * < 87<br>
		 * <i>native declaration : line 301</i>
		 */
		public static final int KEY_KP_PLUS = 87;
		/**
		 * < 88<br>
		 * <i>native declaration : line 302</i>
		 */
		public static final int KEY_KP_ENTER = 88;
		/**
		 * < 89<br>
		 * <i>native declaration : line 303</i>
		 */
		public static final int KEY_KP_1 = 89;
		/**
		 * < 90<br>
		 * <i>native declaration : line 304</i>
		 */
		public static final int KEY_KP_2 = 90;
		/**
		 * < 91<br>
		 * <i>native declaration : line 305</i>
		 */
		public static final int KEY_KP_3 = 91;
		/**
		 * < 92<br>
		 * <i>native declaration : line 306</i>
		 */
		public static final int KEY_KP_4 = 92;
		/**
		 * < 93<br>
		 * <i>native declaration : line 307</i>
		 */
		public static final int KEY_KP_5 = 93;
		/**
		 * < 94<br>
		 * <i>native declaration : line 308</i>
		 */
		public static final int KEY_KP_6 = 94;
		/**
		 * < 95<br>
		 * <i>native declaration : line 309</i>
		 */
		public static final int KEY_KP_7 = 95;
		/**
		 * < 96<br>
		 * <i>native declaration : line 310</i>
		 */
		public static final int KEY_KP_8 = 96;
		/**
		 * < 97<br>
		 * <i>native declaration : line 311</i>
		 */
		public static final int KEY_KP_9 = 97;
		/**
		 * < 98<br>
		 * <i>native declaration : line 312</i>
		 */
		public static final int KEY_KP_0 = 98;
		/**
		 * < 99<br>
		 * <i>native declaration : line 313</i>
		 */
		public static final int KEY_KP_PERIOD = 99;
		/**
		 * < 101<br>
		 * <i>native declaration : line 314</i>
		 */
		public static final int KEY_APPLICATION = 101;
		/**
		 * < 104<br>
		 * <i>native declaration : line 315</i>
		 */
		public static final int KEY_F13 = 104;
		/**
		 * < 105<br>
		 * <i>native declaration : line 316</i>
		 */
		public static final int KEY_F14 = 105;
		/**
		 * < 106<br>
		 * <i>native declaration : line 317</i>
		 */
		public static final int KEY_F15 = 106;
		/**
		 * < 107<br>
		 * <i>native declaration : line 318</i>
		 */
		public static final int KEY_F16 = 107;
		/**
		 * < 108<br>
		 * <i>native declaration : line 319</i>
		 */
		public static final int KEY_F17 = 108;
		/**
		 * < 109<br>
		 * <i>native declaration : line 320</i>
		 */
		public static final int KEY_F18 = 109;
		/**
		 * < 110<br>
		 * <i>native declaration : line 321</i>
		 */
		public static final int KEY_F19 = 110;
		/**
		 * < 118<br>
		 * <i>native declaration : line 322</i>
		 */
		public static final int KEY_MENU = 118;
		/**
		 * < 127<br>
		 * <i>native declaration : line 323</i>
		 */
		public static final int KEY_MUTE = 127;
		/**
		 * < 128<br>
		 * <i>native declaration : line 324</i>
		 */
		public static final int KEY_VOLUMEUP = 128;
		/**
		 * < 129<br>
		 * <i>native declaration : line 325</i>
		 */
		public static final int KEY_VOLUMEDOWN = 129;
		/**
		 * < 224<br>
		 * <i>native declaration : line 326</i>
		 */
		public static final int KEY_LCTRL = 224;
		/**
		 * < 225<br>
		 * <i>native declaration : line 327</i>
		 */
		public static final int KEY_LSHIFT = 225;
		/**
		 * < 226<br>
		 * <i>native declaration : line 328</i>
		 */
		public static final int KEY_LALT = 226;
		/**
		 * < 227<br>
		 * <i>native declaration : line 329</i>
		 */
		public static final int KEY_LGUI = 227;
		/**
		 * < 228<br>
		 * <i>native declaration : line 330</i>
		 */
		public static final int KEY_RCTRL = 228;
		/**
		 * < 229<br>
		 * <i>native declaration : line 331</i>
		 */
		public static final int KEY_RSHIFT = 229;
		/**
		 * < 230<br>
		 * <i>native declaration : line 332</i>
		 */
		public static final int KEY_RALT = 230;
		/**
		 * < 231<br>
		 * <i>native declaration : line 333</i>
		 */
		public static final int KEY_RGUI = 231;
		/**
		 * < 258<br>
		 * <i>native declaration : line 334</i>
		 */
		public static final int KEY_AUDIONEXT = 258;
		/**
		 * < 259<br>
		 * <i>native declaration : line 335</i>
		 */
		public static final int KEY_AUDIOPREV = 259;
		/**
		 * < 260<br>
		 * <i>native declaration : line 336</i>
		 */
		public static final int KEY_AUDIOSTOP = 260;
		/**
		 * < 261<br>
		 * <i>native declaration : line 337</i>
		 */
		public static final int KEY_AUDIOPLAY = 261;
		/**
		 * < 262<br>
		 * <i>native declaration : line 338</i>
		 */
		public static final int KEY_AUDIOMUTE = 262;
		/**
		 * < 263<br>
		 * <i>native declaration : line 339</i>
		 */
		public static final int KEY_MEDIASELECT = 263;
	};
	/** enum values */
	public static interface ParsecKeymod {
		/**
		 * < No stateful modifier key active.<br>
		 * <i>native declaration : line 345</i>
		 */
		public static final int MOD_NONE = 0x0000;
		/**
		 * < `NUMLOCK` is currently active.<br>
		 * <i>native declaration : line 346</i>
		 */
		public static final int MOD_NUM = 0x1000;
		/**
		 * < `CAPSLOCK` is currently active.<br>
		 * <i>native declaration : line 347</i>
		 */
		public static final int MOD_CAPS = 0x2000;
	};
	/** enum values */
	public static interface ParsecMouseButton {
		/**
		 * < Left mouse button<br>
		 * <i>native declaration : line 353</i>
		 */
		public static final int MOUSE_L = 1;
		/**
		 * < Middle mouse button<br>
		 * <i>native declaration : line 354</i>
		 */
		public static final int MOUSE_MIDDLE = 2;
		/**
		 * < Right mouse button<br>
		 * <i>native declaration : line 355</i>
		 */
		public static final int MOUSE_R = 3;
		/**
		 * < Extra mouse button 1<br>
		 * <i>native declaration : line 356</i>
		 */
		public static final int MOUSE_X1 = 4;
		/**
		 * < Extra mouse button 2<br>
		 * <i>native declaration : line 357</i>
		 */
		public static final int MOUSE_X2 = 5;
	};
	/** enum values */
	public static interface ParsecGamepadButton {
		/**
		 * < A button.<br>
		 * <i>native declaration : line 363</i>
		 */
		public static final int GAMEPAD_BUTTON_A = 0;
		/**
		 * < B button.<br>
		 * <i>native declaration : line 364</i>
		 */
		public static final int GAMEPAD_BUTTON_B = 1;
		/**
		 * < X button.<br>
		 * <i>native declaration : line 365</i>
		 */
		public static final int GAMEPAD_BUTTON_X = 2;
		/**
		 * < Y button.<br>
		 * <i>native declaration : line 366</i>
		 */
		public static final int GAMEPAD_BUTTON_Y = 3;
		/**
		 * < Back button.<br>
		 * <i>native declaration : line 367</i>
		 */
		public static final int GAMEPAD_BUTTON_BACK = 4;
		/**
		 * < Guide button.<br>
		 * <i>native declaration : line 368</i>
		 */
		public static final int GAMEPAD_BUTTON_GUIDE = 5;
		/**
		 * < Start button.<br>
		 * <i>native declaration : line 369</i>
		 */
		public static final int GAMEPAD_BUTTON_START = 6;
		/**
		 * < Left thumbstick button.<br>
		 * <i>native declaration : line 370</i>
		 */
		public static final int GAMEPAD_BUTTON_LSTICK = 7;
		/**
		 * < Right thumbstick button.<br>
		 * <i>native declaration : line 371</i>
		 */
		public static final int GAMEPAD_BUTTON_RSTICK = 8;
		/**
		 * < Left shoulder (bumper) button.<br>
		 * <i>native declaration : line 372</i>
		 */
		public static final int GAMEPAD_BUTTON_LSHOULDER = 9;
		/**
		 * < Right shoulder (bumper) button.<br>
		 * <i>native declaration : line 373</i>
		 */
		public static final int GAMEPAD_BUTTON_RSHOULDER = 10;
		/**
		 * < Analog DPAD up.<br>
		 * <i>native declaration : line 374</i>
		 */
		public static final int GAMEPAD_BUTTON_DPAD_UP = 11;
		/**
		 * < Analog DPAD down.<br>
		 * <i>native declaration : line 375</i>
		 */
		public static final int GAMEPAD_BUTTON_DPAD_DOWN = 12;
		/**
		 * < Analog DPAD left.<br>
		 * <i>native declaration : line 376</i>
		 */
		public static final int GAMEPAD_BUTTON_DPAD_LEFT = 13;
		/**
		 * < Analog DPAD right.<br>
		 * <i>native declaration : line 377</i>
		 */
		public static final int GAMEPAD_BUTTON_DPAD_RIGHT = 14;
	};
	/** enum values */
	public static interface ParsecGamepadAxis {
		/**
		 * < Gamepad left thumbstick x-axis<br>
		 * <i>native declaration : line 383</i>
		 */
		public static final int GAMEPAD_AXIS_LX = 0;
		/**
		 * < Gamepad left thumbstick y-axis<br>
		 * <i>native declaration : line 384</i>
		 */
		public static final int GAMEPAD_AXIS_LY = 1;
		/**
		 * < Gamepad right thumbstick x-axis<br>
		 * <i>native declaration : line 385</i>
		 */
		public static final int GAMEPAD_AXIS_RX = 2;
		/**
		 * < Gamepad right thumbstick y-axis<br>
		 * <i>native declaration : line 386</i>
		 */
		public static final int GAMEPAD_AXIS_RY = 3;
		/**
		 * < Gamepad left trigger value<br>
		 * <i>native declaration : line 387</i>
		 */
		public static final int GAMEPAD_AXIS_TRIGGERL = 4;
		/**
		 * < Gamepad right trigger value<br>
		 * <i>native declaration : line 388</i>
		 */
		public static final int GAMEPAD_AXIS_TRIGGERR = 5;
	};
	/** enum values */
	public static interface ParsecMessageType {
		/**
		 * < ::ParsecKeyboardMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 394</i>
		 */
		public static final int MESSAGE_KEYBOARD = 1;
		/**
		 * < ::ParsecMouseButtonMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 395</i>
		 */
		public static final int MESSAGE_MOUSE_BUTTON = 2;
		/**
		 * < ::ParsecMouseWheelMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 396</i>
		 */
		public static final int MESSAGE_MOUSE_WHEEL = 3;
		/**
		 * < ::ParsecMouseMotionMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 397</i>
		 */
		public static final int MESSAGE_MOUSE_MOTION = 4;
		/**
		 * < ::ParsecGamepadButtonMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 398</i>
		 */
		public static final int MESSAGE_GAMEPAD_BUTTON = 5;
		/**
		 * < ::ParsecGamepadAxisMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 399</i>
		 */
		public static final int MESSAGE_GAMEPAD_AXIS = 6;
		/**
		 * < ::ParsecGamepadUnplugMessage is valid in ::ParsecMessage.<br>
		 * <i>native declaration : line 400</i>
		 */
		public static final int MESSAGE_GAMEPAD_UNPLUG = 7;
	};
	/** enum values */
	public static interface ParsecColorFormat {
		/** <i>native declaration : line 406</i> */
		public static final int FORMAT_UNKNOWN = 0;
		/**
		 * < 4:2:0 full width/height Y plane followed by an interleaved half width/height UV plane.<br>
		 * <i>native declaration : line 407</i>
		 */
		public static final int FORMAT_NV12 = 1;
		/**
		 * < 4:2:0 full width/height Y plane followed by a half width/height U plane followed by a half width/height V plane.<br>
		 * <i>native declaration : line 408</i>
		 */
		public static final int FORMAT_I420 = 2;
		/**
		 * < 4:2:2 full width/height Y plane followed by an interleaved half width full height UV plane.<br>
		 * <i>native declaration : line 409</i>
		 */
		public static final int FORMAT_NV16 = 3;
		/**
		 * < 4:2:2 full width/height Y plane followed by a half width full height U plane followed by a half width full height V plane.<br>
		 * <i>native declaration : line 410</i>
		 */
		public static final int FORMAT_I422 = 4;
		/**
		 * < Internal use only.<br>
		 * <i>native declaration : line 411</i>
		 */
		public static final int FORMAT_BGRA = 5;
		/**
		 * < Internal use only.<br>
		 * <i>native declaration : line 412</i>
		 */
		public static final int FORMAT_RGBA = 6;
	};
	/** enum values */
	public static interface ParsecProtocol {
		/**
		 * < Parsec's low-latency optimized BUD protocol<br>
		 * <i>native declaration : line 418</i>
		 */
		public static final int PROTO_MODE_BUD = 1;
		/**
		 * < SCTP protocol compatible with WebRTC data channels<br>
		 * <i>native declaration : line 419</i>
		 */
		public static final int PROTO_MODE_SCTP = 2;
	};
	/** enum values */
	public static interface ParsecContainer {
		/**
		 * < Parsec's custom container compatible with native decoding<br>
		 * <i>native declaration : line 425</i>
		 */
		public static final int CONTAINER_PARSEC = 0;
		/**
		 * < MP4 box container compatible with web browser Media Source Extensions<br>
		 * <i>native declaration : line 426</i>
		 */
		public static final int CONTAINER_MP4 = 2;
	};
	/** enum values */
	public static interface ParsecPCMFormat {
		/**
		 * < 32-bit floating point samples.<br>
		 * <i>native declaration : line 432</i>
		 */
		public static final int PCM_FORMAT_FLOAT = 1;
		/**
		 * < 16-bit signed integer samples.<br>
		 * <i>native declaration : line 433</i>
		 */
		public static final int PCM_FORMAT_INT16 = 2;
	};
	/** enum values */
	public static interface ParsecGuestState {
		/**
		 * < The guest is currently waiting for the host to allow them via `ParsecHostAllowGuest`.<br>
		 * <i>native declaration : line 439</i>
		 */
		public static final int GUEST_WAITING = 0x01;
		/**
		 * < The guest is attempting to make a peer-to-peer connection to the host.<br>
		 * <i>native declaration : line 440</i>
		 */
		public static final int GUEST_CONNECTING = 0x02;
		/**
		 * < The guest is successfully connected.<br>
		 * <i>native declaration : line 441</i>
		 */
		public static final int GUEST_CONNECTED = 0x04;
		/**
		 * < The guest has disconnected.<br>
		 * <i>native declaration : line 442</i>
		 */
		public static final int GUEST_DISCONNECTED = 0x08;
		/**
		 * < The guest failed peer-to-peer negotiation.<br>
		 * <i>native declaration : line 443</i>
		 */
		public static final int GUEST_FAILED = 0x10;
	};
	/** enum values */
	public static interface ParsecHostMode {
		/**
		 * < The host intends to share thier entire desktop. Permission and approval systems apply.<br>
		 * <i>native declaration : line 449</i>
		 */
		public static final int HOST_DESKTOP = 1;
		/**
		 * < Parsec is integrated into a game. The game uses the `Submit` model to provide output.<br>
		 * <i>native declaration : line 450</i>
		 */
		public static final int HOST_GAME = 2;
	};
	/** enum values */
	public static interface ParsecHostEventType {
		/**
		 * < A guest has changed connection state, `guestStateChange` is valid in ::ParsecHostEvent.<br>
		 * <i>native declaration : line 456</i>
		 */
		public static final int HOST_EVENT_GUEST_STATE_CHANGE = 1;
		/**
		 * < User-defined message from a guest, call `ParsecGetBuffer` to retrieve the string.<br>
		 * <i>native declaration : line 457</i>
		 */
		public static final int HOST_EVENT_USER_DATA = 2;
		/**
		 * < A new serverID has been issued to the host, `serverID` is valid in ::ParsecHostEvent.<br>
		 * <i>native declaration : line 458</i>
		 */
		public static final int HOST_EVENT_SERVER_ID = 3;
		/**
		 * < The host's sessionID has become invalid.<br>
		 * <i>native declaration : line 459</i>
		 */
		public static final int HOST_EVENT_INVALID_SESSION_ID = 4;
	};
	/** enum values */
	public static interface ParsecClientEventType {
		/**
		 * < A cursor mode shift or image update is available, `cursor` is valid in ::ParsecClientEvent. Call `ParsecGetBuffer` in the case of an image update.<br>
		 * <i>native declaration : line 465</i>
		 */
		public static final int CLIENT_EVENT_CURSOR = 1;
		/**
		 * < Gamepad rumble event, `rumble` is valid in ::ParsecClientEvent.<br>
		 * <i>native declaration : line 466</i>
		 */
		public static final int CLIENT_EVENT_RUMBLE = 2;
		/**
		 * < User-defined message from the host, `userData` is valid in ::ParsecClientEvent. Call `ParsecGetBuffer` to retrieve the string.<br>
		 * <i>native declaration : line 467</i>
		 */
		public static final int CLIENT_EVENT_USER_DATA = 3;
	};
	public static final int GUEST_NAME_LEN = (int)320;
	public static final int ATTEMPT_ID_LEN = (int)56;
	public static final int PARSEC_VER_MAJOR = (int)0;
	public static final int PARSEC_VER_MINOR = (int)0;
	public static final int PARSEC_VER_PATCH = (int)1;
	public static final int PARSEC_VER = (int)((0 << 16) | 0);
	public interface ParsecLogCallback extends Callback {
		void apply(int level, Pointer msg, Pointer opaque);
	};
	public interface ParsecFrameCallback extends Callback {
		void apply(ParsecFrame frame, Pointer image, Pointer opaque);
	};
	public interface ParsecAudioCallback extends Callback {
		void apply(ShortByReference pcm, int frames, Pointer opaque);
	};
	/**
	 * individual settings passed to ::ParsecInit.<br>
	 * Original signature : <code>ParsecConfig ParsecDefaults()</code><br>
	 * <i>native declaration : line 823</i>
	 */
	public static native ParsecConfig.ByValue ParsecDefaults();
	/**
	 * otherwise #PARSEC_OK.<br>
	 * Original signature : <code>ParsecStatus ParsecInit(uint32_t, ParsecConfig*, void*, Parsec**)</code><br>
	 * <i>native declaration : line 833</i>
	 */
	public static native int ParsecInit(int ver, ParsecConfig cfg, Pointer reserved, PointerByReference ps);
	/**
	 * @param[in] ps ::Parsec instance to be destroyed.<br>
	 * Original signature : <code>void ParsecDestroy(Parsec*)</code><br>
	 * <i>native declaration : line 838</i><br>
	 * @deprecated use the safer method {@link #ParsecDestroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native void ParsecDestroy(Pointer ps);
	/**
	 * @param[in] ps ::Parsec instance to be destroyed.<br>
	 * Original signature : <code>void ParsecDestroy(Parsec*)</code><br>
	 * <i>native declaration : line 838</i>
	 */
	public static native void ParsecDestroy(PointerByReference ps);
	/**
	 * @param[out] cfg ::ParsecConfig runtime configuration.<br>
	 * Original signature : <code>void ParsecGetConfig(Parsec*, ParsecConfig*)</code><br>
	 * <i>native declaration : line 845</i><br>
	 * @deprecated use the safer method {@link #ParsecGetConfig(com.sun.jna.ptr.PointerByReference, ParsecConfig)} instead
	 */
	@Deprecated 
	public static native void ParsecGetConfig(Pointer ps, ParsecConfig cfg);
	/**
	 * @param[out] cfg ::ParsecConfig runtime configuration.<br>
	 * Original signature : <code>void ParsecGetConfig(Parsec*, ParsecConfig*)</code><br>
	 * <i>native declaration : line 845</i>
	 */
	public static native void ParsecGetConfig(PointerByReference ps, ParsecConfig cfg);
	/**
	 * dynamically allocated buffer. Call ::ParsecFree after use.<br>
	 * Original signature : <code>void* ParsecGetBuffer(Parsec*, uint32_t)</code><br>
	 * <i>native declaration : line 855</i><br>
	 * @deprecated use the safer method {@link #ParsecGetBuffer(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	public static native Pointer ParsecGetBuffer(Pointer ps, int key);
	/**
	 * dynamically allocated buffer. Call ::ParsecFree after use.<br>
	 * Original signature : <code>void* ParsecGetBuffer(Parsec*, uint32_t)</code><br>
	 * <i>native declaration : line 855</i>
	 */
	public static native Pointer ParsecGetBuffer(PointerByReference ps, int key);
	/**
	 * @param[in] ptr Buffer dynamically allocated via `malloc` or similar.<br>
	 * Original signature : <code>void ParsecFree(void*)</code><br>
	 * <i>native declaration : line 861</i>
	 */
	public static native void ParsecFree(Pointer ptr);
	/**
	 * individual settings passed to ::ParsecClientConnect.<br>
	 * Original signature : <code>ParsecClientConfig ParsecClientDefaults()</code><br>
	 * <i>native declaration : line 870</i>
	 */
	public static native ParsecClientConfig.ByValue ParsecClientDefaults();
	/**
	 * @returns #PARSEC_OK on successful connection, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientConnect(Parsec*, ParsecClientConfig*, char*, uint32_t)</code><br>
	 * <i>native declaration : line 881</i><br>
	 * @deprecated use the safer methods {@link #ParsecClientConnect(com.sun.jna.ptr.PointerByReference, ParsecClientConfig, java.nio.ByteBuffer, int)} and {@link #ParsecClientConnect(com.sun.jna.ptr.PointerByReference, ParsecClientConfig, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int ParsecClientConnect(Pointer ps, ParsecClientConfig cfg, Pointer sessionID, int serverID);
	/**
	 * @returns #PARSEC_OK on successful connection, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientConnect(Parsec*, ParsecClientConfig*, char*, uint32_t)</code><br>
	 * <i>native declaration : line 881</i>
	 */
	public static native int ParsecClientConnect(PointerByReference ps, ParsecClientConfig cfg, ByteBuffer sessionID, int serverID);
	/**
	 * @returns #PARSEC_OK on successful connection, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientConnect(Parsec*, ParsecClientConfig*, char*, uint32_t)</code><br>
	 * <i>native declaration : line 881</i>
	 */
	public static native int ParsecClientConnect(PointerByReference ps, ParsecClientConfig cfg, Pointer sessionID, int serverID);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecClientDisconnect(Parsec*)</code><br>
	 * <i>native declaration : line 886</i><br>
	 * @deprecated use the safer method {@link #ParsecClientDisconnect(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native void ParsecClientDisconnect(Pointer ps);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecClientDisconnect(Parsec*)</code><br>
	 * <i>native declaration : line 886</i>
	 */
	public static native void ParsecClientDisconnect(PointerByReference ps);
	/**
	 * @returns #PARSEC_OK if the client is running properly, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientGetStatus(Parsec*, ParsecClientStatus*)</code><br>
	 * <i>native declaration : line 895</i><br>
	 * @deprecated use the safer method {@link #ParsecClientGetStatus(com.sun.jna.ptr.PointerByReference, ParsecClientStatus)} instead
	 */
	@Deprecated 
	public static native int ParsecClientGetStatus(Pointer ps, ParsecClientStatus status);
	/**
	 * @returns #PARSEC_OK if the client is running properly, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientGetStatus(Parsec*, ParsecClientStatus*)</code><br>
	 * <i>native declaration : line 895</i>
	 */
	public static native int ParsecClientGetStatus(PointerByReference ps, ParsecClientStatus status);
	/**
	 * @param[in] scale The screen scale used to translate device screen coordinates into pixels.<br>
	 * Original signature : <code>void ParsecClientSetDimensions(Parsec*, uint32_t, uint32_t, float)</code><br>
	 * <i>native declaration : line 905</i><br>
	 * @deprecated use the safer method {@link #ParsecClientSetDimensions(com.sun.jna.ptr.PointerByReference, int, int, float)} instead
	 */
	@Deprecated 
	public static native void ParsecClientSetDimensions(Pointer ps, int width, int height, float scale);
	/**
	 * @param[in] scale The screen scale used to translate device screen coordinates into pixels.<br>
	 * Original signature : <code>void ParsecClientSetDimensions(Parsec*, uint32_t, uint32_t, float)</code><br>
	 * <i>native declaration : line 905</i>
	 */
	public static native void ParsecClientSetDimensions(PointerByReference ps, int width, int height, float scale);
	/**
	 * a ::ParsecStatus warning value on timeout.<br>
	 * Original signature : <code>ParsecStatus ParsecClientPollFrame(Parsec*, ParsecFrameCallback, uint32_t, void*)</code><br>
	 * <i>native declaration : line 915</i><br>
	 * @deprecated use the safer method {@link #ParsecClientPollFrame(com.sun.jna.ptr.PointerByReference, ParsecLibrary.ParsecFrameCallback, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int ParsecClientPollFrame(Pointer ps, ParsecLibrary.ParsecFrameCallback callback, int timeout, Pointer opaque);
	/**
	 * a ::ParsecStatus warning value on timeout.<br>
	 * Original signature : <code>ParsecStatus ParsecClientPollFrame(Parsec*, ParsecFrameCallback, uint32_t, void*)</code><br>
	 * <i>native declaration : line 915</i>
	 */
	public static native int ParsecClientPollFrame(PointerByReference ps, ParsecLibrary.ParsecFrameCallback callback, int timeout, Pointer opaque);
	/**
	 * a ::ParsecStatus warning value on timeout.<br>
	 * Original signature : <code>ParsecStatus ParsecClientPollAudio(Parsec*, ParsecAudioCallback, uint32_t, void*)</code><br>
	 * <i>native declaration : line 925</i><br>
	 * @deprecated use the safer method {@link #ParsecClientPollAudio(com.sun.jna.ptr.PointerByReference, ParsecLibrary.ParsecAudioCallback, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int ParsecClientPollAudio(Pointer ps, ParsecLibrary.ParsecAudioCallback callback, int timeout, Pointer opaque);
	/**
	 * a ::ParsecStatus warning value on timeout.<br>
	 * Original signature : <code>ParsecStatus ParsecClientPollAudio(Parsec*, ParsecAudioCallback, uint32_t, void*)</code><br>
	 * <i>native declaration : line 925</i>
	 */
	public static native int ParsecClientPollAudio(PointerByReference ps, ParsecLibrary.ParsecAudioCallback callback, int timeout, Pointer opaque);
	/**
	 * no events were available.<br>
	 * Original signature : <code>bool ParsecClientPollEvents(Parsec*, uint32_t, ParsecClientEvent*)</code><br>
	 * <i>native declaration : line 934</i><br>
	 * @deprecated use the safer method {@link #ParsecClientPollEvents(com.sun.jna.ptr.PointerByReference, int, ParsecClientEvent)} instead
	 */
	@Deprecated 
	public static native byte ParsecClientPollEvents(Pointer ps, int timeout, ParsecClientEvent event);
	/**
	 * no events were available.<br>
	 * Original signature : <code>bool ParsecClientPollEvents(Parsec*, uint32_t, ParsecClientEvent*)</code><br>
	 * <i>native declaration : line 934</i>
	 */
	public static native byte ParsecClientPollEvents(PointerByReference ps, int timeout, ParsecClientEvent event);
	/**
	 * @returns #PARSEC_OK if a new frame was rendered, otherwise a ::ParsecStatus warning if the previous frame was rendered.<br>
	 * Original signature : <code>ParsecStatus ParsecClientGLRenderFrame(Parsec*, uint32_t)</code><br>
	 * <i>native declaration : line 943</i><br>
	 * @deprecated use the safer method {@link #ParsecClientGLRenderFrame(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	public static native int ParsecClientGLRenderFrame(Pointer ps, int timeout);
	/**
	 * @returns #PARSEC_OK if a new frame was rendered, otherwise a ::ParsecStatus warning if the previous frame was rendered.<br>
	 * Original signature : <code>ParsecStatus ParsecClientGLRenderFrame(Parsec*, uint32_t)</code><br>
	 * <i>native declaration : line 943</i>
	 */
	public static native int ParsecClientGLRenderFrame(PointerByReference ps, int timeout);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecClientGLDestroy(Parsec*)</code><br>
	 * <i>native declaration : line 949</i><br>
	 * @deprecated use the safer method {@link #ParsecClientGLDestroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native void ParsecClientGLDestroy(Pointer ps);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecClientGLDestroy(Parsec*)</code><br>
	 * <i>native declaration : line 949</i>
	 */
	public static native void ParsecClientGLDestroy(PointerByReference ps);
	/**
	 * @returns #PARSEC_OK if the message was sent successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientSendMessage(Parsec*, ParsecMessage*)</code><br>
	 * <i>native declaration : line 959</i><br>
	 * @deprecated use the safer method {@link #ParsecClientSendMessage(com.sun.jna.ptr.PointerByReference, ParsecMessage)} instead
	 */
	@Deprecated 
	public static native int ParsecClientSendMessage(Pointer ps, ParsecMessage msg);
	/**
	 * @returns #PARSEC_OK if the message was sent successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientSendMessage(Parsec*, ParsecMessage*)</code><br>
	 * <i>native declaration : line 959</i>
	 */
	public static native int ParsecClientSendMessage(PointerByReference ps, ParsecMessage msg);
	/**
	 * @returns #PARSEC_OK if the message was sent successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientSendUserData(Parsec*, uint32_t, char*)</code><br>
	 * <i>native declaration : line 971</i><br>
	 * @deprecated use the safer methods {@link #ParsecClientSendUserData(com.sun.jna.ptr.PointerByReference, int, java.nio.ByteBuffer)} and {@link #ParsecClientSendUserData(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int ParsecClientSendUserData(Pointer ps, int id, Pointer text);
	/**
	 * @returns #PARSEC_OK if the message was sent successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientSendUserData(Parsec*, uint32_t, char*)</code><br>
	 * <i>native declaration : line 971</i>
	 */
	public static native int ParsecClientSendUserData(PointerByReference ps, int id, ByteBuffer text);
	/**
	 * @returns #PARSEC_OK if the message was sent successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecClientSendUserData(Parsec*, uint32_t, char*)</code><br>
	 * <i>native declaration : line 971</i>
	 */
	public static native int ParsecClientSendUserData(PointerByReference ps, int id, Pointer text);
	/**
	 * individual settings passed to ::ParsecHostStart or ::ParsecHostSetConfig.<br>
	 * Original signature : <code>ParsecHostConfig ParsecHostDefaults()</code><br>
	 * <i>native declaration : line 980</i>
	 */
	public static native ParsecHostConfig.ByValue ParsecHostDefaults();
	/**
	 * @returns Always #PARSEC_OK on Windows, otherwise #PARSEC_OK in #HOST_GAME mode or #PARSEC_NOT_IMPLEMENTED.<br>
	 * Original signature : <code>ParsecStatus ParsecHostStart(Parsec*, ParsecHostMode, ParsecHostConfig*, char*, char*, uint32_t)</code><br>
	 * <i>native declaration : line 999</i><br>
	 * @deprecated use the safer methods {@link #ParsecHostStart(com.sun.jna.ptr.PointerByReference, int, ParsecHostConfig, java.nio.ByteBuffer, java.nio.ByteBuffer, int)} and {@link #ParsecHostStart(com.sun.jna.ptr.PointerByReference, int, ParsecHostConfig, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int ParsecHostStart(Pointer ps, int mode, ParsecHostConfig cfg, Pointer name, Pointer sessionID, int serverID);
	/**
	 * @returns Always #PARSEC_OK on Windows, otherwise #PARSEC_OK in #HOST_GAME mode or #PARSEC_NOT_IMPLEMENTED.<br>
	 * Original signature : <code>ParsecStatus ParsecHostStart(Parsec*, ParsecHostMode, ParsecHostConfig*, char*, char*, uint32_t)</code><br>
	 * <i>native declaration : line 999</i>
	 */
	public static native int ParsecHostStart(PointerByReference ps, int mode, ParsecHostConfig cfg, ByteBuffer name, ByteBuffer sessionID, int serverID);
	/**
	 * @returns Always #PARSEC_OK on Windows, otherwise #PARSEC_OK in #HOST_GAME mode or #PARSEC_NOT_IMPLEMENTED.<br>
	 * Original signature : <code>ParsecStatus ParsecHostStart(Parsec*, ParsecHostMode, ParsecHostConfig*, char*, char*, uint32_t)</code><br>
	 * <i>native declaration : line 999</i>
	 */
	public static native int ParsecHostStart(PointerByReference ps, int mode, ParsecHostConfig cfg, Pointer name, Pointer sessionID, int serverID);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecHostStop(Parsec*)</code><br>
	 * <i>native declaration : line 1004</i><br>
	 * @deprecated use the safer method {@link #ParsecHostStop(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native void ParsecHostStop(Pointer ps);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecHostStop(Parsec*)</code><br>
	 * <i>native declaration : line 1004</i>
	 */
	public static native void ParsecHostStop(PointerByReference ps);
	/**
	 * @param[out] status ::ParsecHostStatus host runtime info.<br>
	 * Original signature : <code>void ParsecHostGetStatus(Parsec*, ParsecHostStatus*)</code><br>
	 * <i>native declaration : line 1010</i><br>
	 * @deprecated use the safer method {@link #ParsecHostGetStatus(com.sun.jna.ptr.PointerByReference, ParsecHostStatus)} instead
	 */
	@Deprecated 
	public static native void ParsecHostGetStatus(Pointer ps, ParsecHostStatus status);
	/**
	 * @param[out] status ::ParsecHostStatus host runtime info.<br>
	 * Original signature : <code>void ParsecHostGetStatus(Parsec*, ParsecHostStatus*)</code><br>
	 * <i>native declaration : line 1010</i>
	 */
	public static native void ParsecHostGetStatus(PointerByReference ps, ParsecHostStatus status);
	/**
	 * @param[in] cfg ::ParsecHostConfig realtime settings. May be `NULL` to use the values in ::ParsecHostDefaults.<br>
	 * Original signature : <code>void ParsecHostSetConfig(Parsec*, ParsecHostConfig*)</code><br>
	 * <i>native declaration : line 1017</i><br>
	 * @deprecated use the safer method {@link #ParsecHostSetConfig(com.sun.jna.ptr.PointerByReference, ParsecHostConfig)} instead
	 */
	@Deprecated 
	public static native void ParsecHostSetConfig(Pointer ps, ParsecHostConfig cfg);
	/**
	 * @param[in] cfg ::ParsecHostConfig realtime settings. May be `NULL` to use the values in ::ParsecHostDefaults.<br>
	 * Original signature : <code>void ParsecHostSetConfig(Parsec*, ParsecHostConfig*)</code><br>
	 * <i>native declaration : line 1017</i>
	 */
	public static native void ParsecHostSetConfig(PointerByReference ps, ParsecHostConfig cfg);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecHostResetGamepads(Parsec*)</code><br>
	 * <i>native declaration : line 1024</i><br>
	 * @deprecated use the safer method {@link #ParsecHostResetGamepads(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native void ParsecHostResetGamepads(Pointer ps);
	/**
	 * @param[in] ps ::Parsec instance obtained through ::ParsecInit.<br>
	 * Original signature : <code>void ParsecHostResetGamepads(Parsec*)</code><br>
	 * <i>native declaration : line 1024</i>
	 */
	public static native void ParsecHostResetGamepads(PointerByReference ps);
	/**
	 * @returns The length of the array returned in `guests`.<br>
	 * Original signature : <code>uint32_t ParsecHostGetGuests(Parsec*, ParsecGuestState, ParsecGuest**)</code><br>
	 * <i>native declaration : line 1034</i><br>
	 */
	@Deprecated 
	public static native int ParsecHostGetGuests(Pointer ps, int state, PointerByReference guests);
	/**
	 * @returns The length of the array returned in `guests`.<br>
	 * Original signature : <code>uint32_t ParsecHostGetGuests(Parsec*, ParsecGuestState, ParsecGuest**)</code><br>
	 * <i>native declaration : line 1034</i>
	 */
	//public static native int ParsecHostGetGuests(PointerByReference ps, int state, ParsecGuest.ByReference guests[]);
	/**
	 * @param[in] allow `true` to allow the guest to connect, `false` to have them disconnect immediately.<br>
	 * Original signature : <code>void ParsecHostAllowGuest(Parsec*, char*, bool)</code><br>
	 * <i>native declaration : line 1042</i><br>
	 * @deprecated use the safer methods {@link #ParsecHostAllowGuest(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, byte)} and {@link #ParsecHostAllowGuest(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, byte)} instead
	 */
	@Deprecated 
	public static native void ParsecHostAllowGuest(Pointer ps, Pointer attemptID, byte allow);
	/**
	 * @param[in] allow `true` to allow the guest to connect, `false` to have them disconnect immediately.<br>
	 * Original signature : <code>void ParsecHostAllowGuest(Parsec*, char*, bool)</code><br>
	 * <i>native declaration : line 1042</i>
	 */
	public static native void ParsecHostAllowGuest(PointerByReference ps, ByteBuffer attemptID, byte allow);
	/**
	 * @param[in] allow `true` to allow the guest to connect, `false` to have them disconnect immediately.<br>
	 * Original signature : <code>void ParsecHostAllowGuest(Parsec*, char*, bool)</code><br>
	 * <i>native declaration : line 1042</i>
	 */
	public static native void ParsecHostAllowGuest(PointerByReference ps, Pointer attemptID, byte allow);
	/**
	 * @returns #PARSEC_OK if permissions were set successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostSetPermissions(Parsec*, uint32_t, ParsecPermissions*)</code><br>
	 * <i>native declaration : line 1051</i><br>
	 * @deprecated use the safer method {@link #ParsecHostSetPermissions(com.sun.jna.ptr.PointerByReference, int, ParsecPermissions)} instead
	 */
	@Deprecated 
	public static native int ParsecHostSetPermissions(Pointer ps, int guestID, ParsecPermissions perms);
	/**
	 * @returns #PARSEC_OK if permissions were set successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostSetPermissions(Parsec*, uint32_t, ParsecPermissions*)</code><br>
	 * <i>native declaration : line 1051</i>
	 */
	public static native int ParsecHostSetPermissions(PointerByReference ps, int guestID, ParsecPermissions perms);
	/**
	 * @returns #PARSEC_OK if the guest was successfully kicked, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostKickGuest(Parsec*, uint32_t)</code><br>
	 * <i>native declaration : line 1058</i><br>
	 * @deprecated use the safer method {@link #ParsecHostKickGuest(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	public static native int ParsecHostKickGuest(Pointer ps, int guestID);
	/**
	 * @returns #PARSEC_OK if the guest was successfully kicked, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostKickGuest(Parsec*, uint32_t)</code><br>
	 * <i>native declaration : line 1058</i>
	 */
	public static native int ParsecHostKickGuest(PointerByReference ps, int guestID);
	/**
	 * @returns #PARSEC_OK if the message was successfully sent, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostSendUserData(Parsec*, uint32_t, uint32_t, char*)</code><br>
	 * <i>native declaration : line 1067</i><br>
	 * @deprecated use the safer methods {@link #ParsecHostSendUserData(com.sun.jna.ptr.PointerByReference, int, int, java.nio.ByteBuffer)} and {@link #ParsecHostSendUserData(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int ParsecHostSendUserData(Pointer ps, int guestID, int id, Pointer text);
	/**
	 * @returns #PARSEC_OK if the message was successfully sent, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostSendUserData(Parsec*, uint32_t, uint32_t, char*)</code><br>
	 * <i>native declaration : line 1067</i>
	 */
	public static native int ParsecHostSendUserData(PointerByReference ps, int guestID, int id, ByteBuffer text);
	/**
	 * @returns #PARSEC_OK if the message was successfully sent, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostSendUserData(Parsec*, uint32_t, uint32_t, char*)</code><br>
	 * <i>native declaration : line 1067</i>
	 */
	public static native int ParsecHostSendUserData(PointerByReference ps, int guestID, int id, Pointer text);
	/**
	 * no messages were available.<br>
	 * Original signature : <code>bool ParsecHostPollInput(Parsec*, uint32_t, ParsecGuest*, ParsecMessage*)</code><br>
	 * <i>native declaration : line 1077</i><br>
	 * @deprecated use the safer method {@link #ParsecHostPollInput(com.sun.jna.ptr.PointerByReference, int, ParsecGuest, ParsecMessage)} instead
	 */
	@Deprecated 
	public static native byte ParsecHostPollInput(Pointer ps, int timeout, ParsecGuest guest, ParsecMessage msg);
	/**
	 * no messages were available.<br>
	 * Original signature : <code>bool ParsecHostPollInput(Parsec*, uint32_t, ParsecGuest*, ParsecMessage*)</code><br>
	 * <i>native declaration : line 1077</i>
	 */
	public static native byte ParsecHostPollInput(PointerByReference ps, int timeout, ParsecGuest guest, ParsecMessage msg);
	/**
	 * no events were available.<br>
	 * Original signature : <code>bool ParsecHostPollEvents(Parsec*, uint32_t, ParsecHostEvent*)</code><br>
	 * <i>native declaration : line 1086</i><br>
	 * @deprecated use the safer method {@link #ParsecHostPollEvents(com.sun.jna.ptr.PointerByReference, int, ParsecHostEvent)} instead
	 */
	@Deprecated 
	public static native byte ParsecHostPollEvents(Pointer ps, int timeout, ParsecHostEvent event);
	/**
	 * no events were available.<br>
	 * Original signature : <code>bool ParsecHostPollEvents(Parsec*, uint32_t, ParsecHostEvent*)</code><br>
	 * <i>native declaration : line 1086</i>
	 */
	public static native byte ParsecHostPollEvents(PointerByReference ps, int timeout, ParsecHostEvent event);
	/**
	 * @param[in] frames The number of audio frames contained in `pcm`.<br>
	 * Original signature : <code>void ParsecHostSubmitAudio(Parsec*, ParsecPCMFormat, uint32_t, uint8_t*, uint32_t)</code><br>
	 * <i>native declaration : line 1096</i><br>
	 * @deprecated use the safer methods {@link #ParsecHostSubmitAudio(com.sun.jna.ptr.PointerByReference, int, int, java.nio.ByteBuffer, int)} and {@link #ParsecHostSubmitAudio(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native void ParsecHostSubmitAudio(Pointer ps, int format, int sampleRate, Pointer pcm, int frames);
	/**
	 * @param[in] frames The number of audio frames contained in `pcm`.<br>
	 * Original signature : <code>void ParsecHostSubmitAudio(Parsec*, ParsecPCMFormat, uint32_t, uint8_t*, uint32_t)</code><br>
	 * <i>native declaration : line 1096</i>
	 */
	public static native void ParsecHostSubmitAudio(PointerByReference ps, int format, int sampleRate, ByteBuffer pcm, int frames);
	/**
	 * @param[in] frames The number of audio frames contained in `pcm`.<br>
	 * Original signature : <code>void ParsecHostSubmitAudio(Parsec*, ParsecPCMFormat, uint32_t, uint8_t*, uint32_t)</code><br>
	 * <i>native declaration : line 1096</i>
	 */
	public static native void ParsecHostSubmitAudio(PointerByReference ps, int format, int sampleRate, Pointer pcm, int frames);
	/**
	 * @param[in] image 32-bit per pixel RGBA cursor image buffer.<br>
	 * Original signature : <code>void ParsecHostSubmitCursor(Parsec*, ParsecCursor*, uint8_t*)</code><br>
	 * <i>native declaration : line 1104</i><br>
	 * @deprecated use the safer methods {@link #ParsecHostSubmitCursor(com.sun.jna.ptr.PointerByReference, ParsecCursor, java.nio.ByteBuffer)} and {@link #ParsecHostSubmitCursor(com.sun.jna.ptr.PointerByReference, ParsecCursor, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native void ParsecHostSubmitCursor(Pointer ps, ParsecCursor cursor, Pointer image);
	/**
	 * @param[in] image 32-bit per pixel RGBA cursor image buffer.<br>
	 * Original signature : <code>void ParsecHostSubmitCursor(Parsec*, ParsecCursor*, uint8_t*)</code><br>
	 * <i>native declaration : line 1104</i>
	 */
	public static native void ParsecHostSubmitCursor(PointerByReference ps, ParsecCursor cursor, ByteBuffer image);
	/**
	 * @param[in] image 32-bit per pixel RGBA cursor image buffer.<br>
	 * Original signature : <code>void ParsecHostSubmitCursor(Parsec*, ParsecCursor*, uint8_t*)</code><br>
	 * <i>native declaration : line 1104</i>
	 */
	public static native void ParsecHostSubmitCursor(PointerByReference ps, ParsecCursor cursor, Pointer image);
	/**
	 * @param[in] motorSmall 8-bit unsigned value for small motor vibration.<br>
	 * Original signature : <code>void ParsecHostSubmitRumble(Parsec*, uint32_t, uint32_t, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : line 1113</i><br>
	 * @deprecated use the safer method {@link #ParsecHostSubmitRumble(com.sun.jna.ptr.PointerByReference, int, int, byte, byte)} instead
	 */
	@Deprecated 
	public static native void ParsecHostSubmitRumble(Pointer ps, int guestID, int gamepadID, byte motorBig, byte motorSmall);
	/**
	 * @param[in] motorSmall 8-bit unsigned value for small motor vibration.<br>
	 * Original signature : <code>void ParsecHostSubmitRumble(Parsec*, uint32_t, uint32_t, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : line 1113</i>
	 */
	public static native void ParsecHostSubmitRumble(PointerByReference ps, int guestID, int gamepadID, byte motorBig, byte motorSmall);
	/**
	 * @returns #PARSEC_OK if the frame was submitted successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostGLSubmitFrame(Parsec*, ParsecGLuint)</code><br>
	 * <i>native declaration : line 1120</i><br>
	 * @deprecated use the safer method {@link #ParsecHostGLSubmitFrame(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	public static native int ParsecHostGLSubmitFrame(Pointer ps, int frame);
	/**
	 * @returns #PARSEC_OK if the frame was submitted successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostGLSubmitFrame(Parsec*, ParsecGLuint)</code><br>
	 * <i>native declaration : line 1120</i>
	 */
	public static native int ParsecHostGLSubmitFrame(PointerByReference ps, int frame);
	/**
	 * @returns #PARSEC_OK if the frame was submitted successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostD3D11SubmitFrame(Parsec*, ParsecD3D11Device*, ParsecD3D11Texture2D*)</code><br>
	 * <i>native declaration : line 1128</i><br>
	 * @deprecated use the safer method {@link #ParsecHostD3D11SubmitFrame(com.sun.jna.ptr.PointerByReference, ParsecLibrary.ParsecD3D11Device, ParsecLibrary.ParsecD3D11Texture2D)} instead
	 */
	@Deprecated 
	public static native int ParsecHostD3D11SubmitFrame(Pointer ps, ParsecLibrary.ParsecD3D11Device device, ParsecLibrary.ParsecD3D11Texture2D frame);
	/**
	 * @returns #PARSEC_OK if the frame was submitted successfully, otherwise a ::ParsecStatus error value.<br>
	 * Original signature : <code>ParsecStatus ParsecHostD3D11SubmitFrame(Parsec*, ParsecD3D11Device*, ParsecD3D11Texture2D*)</code><br>
	 * <i>native declaration : line 1128</i>
	 */
	public static native int ParsecHostD3D11SubmitFrame(PointerByReference ps, ParsecLibrary.ParsecD3D11Device device, ParsecLibrary.ParsecD3D11Texture2D frame);
	/**
	 * @param[in] opaque User supplied context to be passed through to `callback`.<br>
	 * Original signature : <code>void ParsecSetLogCallback(ParsecLogCallback, void*)</code><br>
	 * <i>native declaration : line 1140</i>
	 */
	public static native void ParsecSetLogCallback(ParsecLibrary.ParsecLogCallback callback, Pointer opaque);
	/**
	 * incompatibility. #PARSEC_VER_MAJOR is the upper 16 bits, #PARSEC_VER_MINOR is the lower 16 bits.<br>
	 * Original signature : <code>uint32_t ParsecVersion()</code><br>
	 * <i>native declaration : line 1146</i>
	 */
	public static native int ParsecVersion();
	public static class Parsec extends PointerType {
		public Parsec(Pointer address) {
			super(address);
		}
		public Parsec() {
			super();
		}
	};
	public static class ParsecD3D11Device extends PointerType {
		public ParsecD3D11Device(Pointer address) {
			super(address);
		}
		public ParsecD3D11Device() {
			super();
		}
	};
	public static class ParsecD3D11Texture2D extends PointerType {
		public ParsecD3D11Texture2D(Pointer address) {
			super(address);
		}
		public ParsecD3D11Texture2D() {
			super();
		}
	};
}
