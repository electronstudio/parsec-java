package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecServerIDEvent extends Structure {
	/** < The host's unique user identifier. */
	public int userID;
	/** < Newly issued `serverID`. */
	public int serverID;
	public ParsecServerIDEvent() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("userID", "serverID");
	}
	/**
	 * @param userID < The host's unique user identifier.<br>
	 * @param serverID < Newly issued `serverID`.
	 */
	public ParsecServerIDEvent(int userID, int serverID) {
		super();
		this.userID = userID;
		this.serverID = serverID;
	}
	public ParsecServerIDEvent(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecServerIDEvent implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecServerIDEvent implements Structure.ByValue {
		
	};
}
