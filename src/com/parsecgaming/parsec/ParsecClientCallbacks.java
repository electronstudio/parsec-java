package com.parsecgaming.parsec;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.ShortByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecClientCallbacks extends Structure {
	/** C type : audio_callback* */
	public audio_callback audio;
	/** C type : clipboard_callback* */
	public clipboard_callback clipboard;
	/** C type : rumble_callback* */
	public rumble_callback rumble;
	/** C type : shutter_callback* */
	public shutter_callback shutter;
	/** C type : userData_callback* */
	public ParsecHostCallbacks.userData_callback userData;
	public interface audio_callback extends Callback {
		void apply(ShortByReference pcm, int samples, Pointer opaque);
	};
	public interface clipboard_callback extends Callback {
		void apply(Pointer text, Pointer opaque);
	};
	public interface rumble_callback extends Callback {
		void apply(int gamepadID, byte motorBig, byte motorSmall, Pointer opaque);
	};
	public interface shutter_callback extends Callback {
		void apply(byte shuttered, Pointer opaque);
	};
	public interface userData_callback extends Callback {
		void apply(int id, Pointer text, Pointer opaque);
	};
	public ParsecClientCallbacks() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("audio", "clipboard", "rumble", "shutter", "userData");
	}
	/**
	 * @param audio C type : audio_callback*<br>
	 * @param clipboard C type : clipboard_callback*<br>
	 * @param rumble C type : rumble_callback*<br>
	 * @param shutter C type : shutter_callback*<br>
	 * @param userData C type : userData_callback*
	 */
	public ParsecClientCallbacks(audio_callback audio, clipboard_callback clipboard, rumble_callback rumble, shutter_callback shutter, ParsecHostCallbacks.userData_callback userData) {
		super();
		this.audio = audio;
		this.clipboard = clipboard;
		this.rumble = rumble;
		this.shutter = shutter;
		this.userData = userData;
	}
	public ParsecClientCallbacks(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecClientCallbacks implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecClientCallbacks implements Structure.ByValue {
		
	};
}
