package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecCursor extends Structure {
	/** < Size in bytes of the cursor image buffer. */
	public int size;
	/** < When leaving relative mode, the horizontal position in screen coordinates where the cursor reappears. */
	public int positionX;
	/** < When leaving relative mode, the vertical position in screen coordinates where the cursor reappears. */
	public int positionY;
	/** < Width of the cursor image in pixels. */
	public short width;
	/** < Height of the cursor position in pixels. */
	public short height;
	/** < Horizontal pixel position of the cursor hotspot within the image. */
	public short hotX;
	/** < Vertical pixel position of the cursor hotspot within the image. */
	public short hotY;
	/** < `true` if the cursor mode should be updated. The `relative`, `positionX`, and `positionY` members are valid. */
	public byte modeUpdate;
	/** < `true` if the cursor image should be updated. The `width`, `height`, `hotX`, `hotY`, and `size` members are valid. */
	public byte imageUpdate;
	/** < `true` if in relative mode, meaning the client should submit mouse motion in relative distances rather than absolute screen coordinates. */
	public byte relative;
	/** C type : uint8_t[1] */
	public byte[] __pad = new byte[1];
	public ParsecCursor() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("size", "positionX", "positionY", "width", "height", "hotX", "hotY", "modeUpdate", "imageUpdate", "relative", "__pad");
	}
	public ParsecCursor(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecCursor implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecCursor implements Structure.ByValue {
		
	};
}
