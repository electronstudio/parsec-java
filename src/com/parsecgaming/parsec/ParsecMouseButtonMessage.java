package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecMouseButtonMessage extends Structure {
	/** < `true` if clicked, `false` if released. */
	public byte pressed;
	/**
	 * < `ParsecMouseButton` value.<br>
	 * C type : ParsecMouseButton
	 */
	public int button;
	public ParsecMouseButtonMessage() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("pressed", "button");
	}
	/**
	 * @param pressed < `true` if clicked, `false` if released.<br>
	 * @param button @see ParsecMouseButton<br>
	 * < `ParsecMouseButton` value.<br>
	 * C type : ParsecMouseButton
	 */
	public ParsecMouseButtonMessage(byte pressed, int button) {
		super();
		this.pressed = pressed;
		this.button = button;
	}
	public ParsecMouseButtonMessage(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecMouseButtonMessage implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecMouseButtonMessage implements Structure.ByValue {
		
	};
}
