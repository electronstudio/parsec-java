package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecMouseWheelMessage extends Structure {
	/**  Horizontal delta of mouse wheel rotation. Negative values scroll left. */
	public int x;
	/**  Vertical delta of mouse wheel rotation. Negative values scroll up. */
	public int y;
	public ParsecMouseWheelMessage() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("x", "y");
	}
	/**
	 * @param x  Horizontal delta of mouse wheel rotation. Negative values scroll left.<br>
	 * @param y  Vertical delta of mouse wheel rotation. Negative values scroll up.
	 */
	public ParsecMouseWheelMessage(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	public ParsecMouseWheelMessage(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecMouseWheelMessage implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecMouseWheelMessage implements Structure.ByValue {
		
	};
}
