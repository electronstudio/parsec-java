package com.parsecgaming.parsec;
import com.parsecgaming.parsec.ParsecGamepadAxisMessage;
import com.parsecgaming.parsec.ParsecGamepadButtonMessage;
import com.parsecgaming.parsec.ParsecGamepadUnplugMessage;
import com.parsecgaming.parsec.ParsecKeyboardMessage;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecMessage extends Structure {
	/**
	 * @see ParsecLibrary.ParsecMessageType
	 * < `ParsecMessageType` type.<br>
	 * C type : ParsecMessageType
	 */
	public int type;
	/** C type : field1_union */
	public field1_union field1;
	/** <i>native declaration : line 606</i> */
	public static class field1_union extends Union {
		/**
		 * < Keyboard message.<br>
		 * C type : ParsecKeyboardMessage
		 */
		public ParsecKeyboardMessage keyboard;
		/**
		 * < Mouse button message.<br>
		 * C type : ParsecMouseButtonMessage
		 */
		public ParsecMouseButtonMessage mouseButton;
		/**
		 * < Mouse wheel message.<br>
		 * C type : ParsecMouseWheelMessage
		 */
		public ParsecMouseWheelMessage mouseWheel;
		/**
		 * < Mouse motion message.<br>
		 * C type : ParsecMouseMotionMessage
		 */
		public ParsecMouseMotionMessage mouseMotion;
		/**
		 * < Gamepad button message.<br>
		 * C type : ParsecGamepadButtonMessage
		 */
		public ParsecGamepadButtonMessage gamepadButton;
		/**
		 * < Gamepad axis message.<br>
		 * C type : ParsecGamepadAxisMessage
		 */
		public ParsecGamepadAxisMessage gamepadAxis;
		/**
		 * < Gamepad unplug message.<br>
		 * C type : ParsecGamepadUnplugMessage
		 */
		public ParsecGamepadUnplugMessage gamepadUnplug;
		public field1_union() {
			super();
		}
		/**
		 * @param keyboard < Keyboard message.<br>
		 * C type : ParsecKeyboardMessage
		 */
		public field1_union(ParsecKeyboardMessage keyboard) {
			super();
			this.keyboard = keyboard;
			setType(ParsecKeyboardMessage.class);
		}
		/**
		 * @param mouseButton < Mouse button message.<br>
		 * C type : ParsecMouseButtonMessage
		 */
		public field1_union(ParsecMouseButtonMessage mouseButton) {
			super();
			this.mouseButton = mouseButton;
			setType(ParsecMouseButtonMessage.class);
		}
		/**
		 * @param mouseWheel < Mouse wheel message.<br>
		 * C type : ParsecMouseWheelMessage
		 */
		public field1_union(ParsecMouseWheelMessage mouseWheel) {
			super();
			this.mouseWheel = mouseWheel;
			setType(ParsecMouseWheelMessage.class);
		}
		/**
		 * @param mouseMotion < Mouse motion message.<br>
		 * C type : ParsecMouseMotionMessage
		 */
		public field1_union(ParsecMouseMotionMessage mouseMotion) {
			super();
			this.mouseMotion = mouseMotion;
			setType(ParsecMouseMotionMessage.class);
		}
		/**
		 * @param gamepadButton < Gamepad button message.<br>
		 * C type : ParsecGamepadButtonMessage
		 */
		public field1_union(ParsecGamepadButtonMessage gamepadButton) {
			super();
			this.gamepadButton = gamepadButton;
			setType(ParsecGamepadButtonMessage.class);
		}
		/**
		 * @param gamepadAxis < Gamepad axis message.<br>
		 * C type : ParsecGamepadAxisMessage
		 */
		public field1_union(ParsecGamepadAxisMessage gamepadAxis) {
			super();
			this.gamepadAxis = gamepadAxis;
			setType(ParsecGamepadAxisMessage.class);
		}
		/**
		 * @param gamepadUnplug < Gamepad unplug message.<br>
		 * C type : ParsecGamepadUnplugMessage
		 */
		public field1_union(ParsecGamepadUnplugMessage gamepadUnplug) {
			super();
			this.gamepadUnplug = gamepadUnplug;
			setType(ParsecGamepadUnplugMessage.class);
		}
		public field1_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends field1_union implements Structure.ByReference {
			
		};
		public static class ByValue extends field1_union implements Structure.ByValue {
			
		};
	};
	public ParsecMessage() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("type", "field1");
	}
	/**
	 * @param type @see ParsecMessageType<br>
	 * < `ParsecMessageType` type.<br>
	 * C type : ParsecMessageType<br>
	 * @param field1 C type : field1_union
	 */
	public ParsecMessage(int type, field1_union field1) {
		super();
		this.type = type;
		this.field1 = field1;
	}
	public ParsecMessage(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecMessage implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecMessage implements Structure.ByValue {
		
	};
}
