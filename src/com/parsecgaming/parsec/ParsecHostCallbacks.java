package com.parsecgaming.parsec;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecHostCallbacks extends Structure {
	/** C type : guestStateChange_callback* */
	public guestStateChange_callback guestStateChange;
	/** C type : userData_callback* */
	public userData_callback userData;
	/** C type : serverID_callback* */
	public serverID_callback serverID;
	/** C type : invalidSessionID_callback* */
	public invalidSessionID_callback invalidSessionID;
	public interface guestStateChange_callback extends Callback {
		void apply(ParsecGuest guest, Pointer opaque);
	};
	public interface userData_callback extends Callback {
		void apply(ParsecGuest guest, int id, Pointer text, Pointer opaque);
	};
	public interface serverID_callback extends Callback {
		void apply(int hostID, int serverID, Pointer opaque);
	};
	public interface invalidSessionID_callback extends Callback {
		void apply(Pointer opaque);
	};
	public ParsecHostCallbacks() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("guestStateChange", "userData", "serverID", "invalidSessionID");
	}
	/**
	 * @param guestStateChange C type : guestStateChange_callback*<br>
	 * @param userData C type : userData_callback*<br>
	 * @param serverID C type : serverID_callback*<br>
	 * @param invalidSessionID C type : invalidSessionID_callback*
	 */
	public ParsecHostCallbacks(guestStateChange_callback guestStateChange, userData_callback userData, serverID_callback serverID, invalidSessionID_callback invalidSessionID) {
		super();
		this.guestStateChange = guestStateChange;
		this.userData = userData;
		this.serverID = serverID;
		this.invalidSessionID = invalidSessionID;
	}
	public ParsecHostCallbacks(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecHostCallbacks implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecHostCallbacks implements Structure.ByValue {
		
	};
}
