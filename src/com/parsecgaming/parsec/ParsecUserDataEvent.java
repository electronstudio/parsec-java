package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecUserDataEvent extends Structure {
	/**
	 * < Guest ::ParsecGuest properties.<br>
	 * C type : ParsecGuest
	 */
	public ParsecGuest guest;
	/** < User-defined message ID set by the client. */
	public int id;
	/** < Buffer lookup key passed to ::ParsecGetBuffer to retrieve the message. */
	public int key;
	public ParsecUserDataEvent() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("guest", "id", "key");
	}
	/**
	 * @param guest < Guest ::ParsecGuest properties.<br>
	 * C type : ParsecGuest<br>
	 * @param id < User-defined message ID set by the client.<br>
	 * @param key < Buffer lookup key passed to ::ParsecGetBuffer to retrieve the message.
	 */
	public ParsecUserDataEvent(ParsecGuest guest, int id, int key) {
		super();
		this.guest = guest;
		this.id = id;
		this.key = key;
	}
	public ParsecUserDataEvent(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecUserDataEvent implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecUserDataEvent implements Structure.ByValue {
		
	};
}
