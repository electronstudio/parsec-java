package com.parsecgaming.parsec;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ParsecClientStatus extends Structure {
	/**
	 * < Internal status of the audio subsystem. `PARSEC_OK` indicates proper behavior.<br>
	 * C type : ParsecStatus
	 */
	public int audio;
	/**
	 * < Internal status of the messaging subsystem. `PARSEC_OK` indicates proper behavior.<br>
	 * C type : ParsecStatus
	 */
	public int msg;
	/**
	 * < Internal status of the video decode subsystem. `PARSEC_OK` indicates proper behavior.<br>
	 * C type : ParsecStatus
	 */
	public int decode;
	/** < Client is currently experiencing network failure. */
	public byte networkFailure;
	/** < `true` after calling `ParsecClientStart`. */
	public byte running;
	/** < `true` if the client had to fallback to software decoding after being unable to internally initialize a hardware accelerated decoder. */
	public byte decoderFallback;
	public ParsecClientStatus() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("audio", "msg", "decode", "networkFailure", "running", "decoderFallback");
	}
	/**
	 * @param audio @see ParsecStatus<br>
	 * < Internal status of the audio subsystem. `PARSEC_OK` indicates proper behavior.<br>
	 * C type : ParsecStatus<br>
	 * @param msg @see ParsecStatus<br>
	 * < Internal status of the messaging subsystem. `PARSEC_OK` indicates proper behavior.<br>
	 * C type : ParsecStatus<br>
	 * @param decode @see ParsecStatus<br>
	 * < Internal status of the video decode subsystem. `PARSEC_OK` indicates proper behavior.<br>
	 * C type : ParsecStatus<br>
	 * @param networkFailure < Client is currently experiencing network failure.<br>
	 * @param running < `true` after calling `ParsecClientStart`.<br>
	 * @param decoderFallback < `true` if the client had to fallback to software decoding after being unable to internally initialize a hardware accelerated decoder.
	 */
	public ParsecClientStatus(int audio, int msg, int decode, byte networkFailure, byte running, byte decoderFallback) {
		super();
		this.audio = audio;
		this.msg = msg;
		this.decode = decode;
		this.networkFailure = networkFailure;
		this.running = running;
		this.decoderFallback = decoderFallback;
	}
	public ParsecClientStatus(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ParsecClientStatus implements Structure.ByReference {
		
	};
	public static class ByValue extends ParsecClientStatus implements Structure.ByValue {
		
	};
}
